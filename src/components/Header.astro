---
import { NAVIGATION } from '../pages/lib/navigation';
import { GENERAL } from '../pages/lib/general';
---

<header class="flex items-center justify-between whitespace-nowrap border-b border-solid border-b-stone-200 px-4 md:px-10 py-4">
    <div class="flex items-center gap-3 text-stone-800">
        <a href="/" class="inline-block">
            <img src={GENERAL.brand.logo.src} alt={GENERAL.brand.logoAlt} class="w-48" />
        </a>
    </div>
    
    <!-- Desktop Navigation -->
    <div class="hidden md:flex flex-1 justify-end items-center gap-8">
        <nav class="flex items-center gap-8">
            {NAVIGATION.headerLinks.map((link, index) => (
                <a class="text-stone-700 text-base font-medium hover:text-primary-brown transition-colors" href={link.href}>{link.label}</a>
            ))}
        </nav>
        <a href={NAVIGATION.headerCta.href} target="_blank" class="inline-block">
            <button
                class="flex min-w-[84px] max-w-[480px] cursor-pointer items-center justify-center overflow-hidden rounded-md h-10 px-5 bg-primary-brown text-white text-base font-semibold leading-normal tracking-wide hover:bg-opacity-90 transition-all"
            >
                <span class="truncate">{NAVIGATION.headerCta.label}</span>
            </button>
        </a>
    </div>

    <!-- Mobile Menu Button -->
    <button
        id="mobile-menu-button"
        class="md:hidden flex flex-col items-center justify-center w-8 h-8 space-y-1"
        aria-label="Open mobile menu"
    >
        <span id="hamburger-line-1" class="block w-6 h-0.5 bg-stone-700 transition-all duration-300"></span>
        <span id="hamburger-line-2" class="block w-6 h-0.5 bg-stone-700 transition-all duration-300"></span>
        <span id="hamburger-line-3" class="block w-6 h-0.5 bg-stone-700 transition-all duration-300"></span>
    </button>
</header>

<!-- Mobile Menu Overlay -->
<div
    id="mobile-menu"
    class="fixed inset-0 bg-primary bg-opacity-95 z-50 transform translate-x-full transition-transform duration-300 ease-in-out md:hidden"
>
    <div class="flex flex-col h-full">
        <!-- Mobile Menu Header -->
        <div class="flex items-center justify-between p-4 border-b border-stone-700">
            <div class="flex items-center gap-3 text-white">          
                <img src={GENERAL.brand.logo.src} alt={GENERAL.brand.logoAlt} class="w-48" />
            </div>
            <button
                id="close-menu-button"
                class="text-primary-brown hover:text-primary-brown transition-colors"
                aria-label="Close mobile menu"
            >
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
        </div>

        <!-- Mobile Navigation -->
        <nav class="flex flex-col flex-1 p-6">
            <div class="flex flex-col space-y-4">
                {NAVIGATION.headerLinks.map((link, index) => (
                    <a class="text-stone-700 text-lg font-medium hover:text-primary-brown-hover transition-colors py-3 border-b border-stone-700" href={link.href}>{link.label}</a>
                ))}
            </div>            
            
            <!-- Mobile CTA Button -->
            <div class="mt-auto pt-6">
                <a href={NAVIGATION.headerCta.href} target="_blank">
                    <button class="w-full flex items-center justify-center rounded-md h-12 bg-primary-brown text-white text-sm font-bold leading-normal tracking-[0.015em] hover:bg-opacity-90 transition-all"
                    >
                        <span class="truncate">{NAVIGATION.headerCta.label}</span>
                    </button>
                </a>
            </div>
        </nav>
    </div>
</div>

<script>
    // Mobile menu functionality
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const closeMenuButton = document.getElementById('close-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const hamburgerLine1 = document.getElementById('hamburger-line-1');
    const hamburgerLine2 = document.getElementById('hamburger-line-2');
    const hamburgerLine3 = document.getElementById('hamburger-line-3');

    function toggleMenu() {
        if (!mobileMenu || !hamburgerLine1 || !hamburgerLine2 || !hamburgerLine3) return;
        
        const isOpen = mobileMenu.classList.contains('translate-x-0');
        
        if (isOpen) {
            // Close menu
            mobileMenu.classList.remove('translate-x-0');
            mobileMenu.classList.add('translate-x-full');
            
            // Reset hamburger
            hamburgerLine1.classList.remove('rotate-45', 'translate-y-1.5');
            hamburgerLine2.classList.remove('opacity-0');
            hamburgerLine3.classList.remove('-rotate-45', '-translate-y-1.5');
        } else {
            // Open menu
            mobileMenu.classList.remove('translate-x-full');
            mobileMenu.classList.add('translate-x-0');
            
            // Animate hamburger to X
            hamburgerLine1.classList.add('rotate-45', 'translate-y-1.5');
            hamburgerLine2.classList.add('opacity-0');
            hamburgerLine3.classList.add('-rotate-45', '-translate-y-1.5');
        }
    }

    function closeMenu() {
        if (!mobileMenu || !hamburgerLine1 || !hamburgerLine2 || !hamburgerLine3) return;
        
        mobileMenu.classList.remove('translate-x-0');
        mobileMenu.classList.add('translate-x-full');
        
        // Reset hamburger
        hamburgerLine1.classList.remove('rotate-45', 'translate-y-1.5');
        hamburgerLine2.classList.remove('opacity-0');
        hamburgerLine3.classList.remove('-rotate-45', '-translate-y-1.5');
    }

    // Event listeners
    mobileMenuButton?.addEventListener('click', toggleMenu);
    closeMenuButton?.addEventListener('click', closeMenu);

    // Close menu when clicking outside
    mobileMenu?.addEventListener('click', (e) => {
        if (e.target === mobileMenu) {
            closeMenu();
        }
    });

    // Close menu on escape key
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
            closeMenu();
        }
    });

    // Close menu on window resize (if mobile menu is open on desktop)
    window.addEventListener('resize', () => {
        if (window.innerWidth >= 768 && mobileMenu?.classList.contains('translate-x-0')) {
            closeMenu();
        }
    });
</script>